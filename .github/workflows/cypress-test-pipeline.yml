name: Cypress e2e tests
on: pull_request

jobs:

# Stop previous runs
  stop-previous-run:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

# Check if forked master is up to date with origin master in module federation examples repo
  forked_master_status:
    runs-on: ubuntu-latest
    needs: stop-previous-run
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Check if forked master is up to date
        if: ${{ github.repositoryUrl }} == 'git://github.com/module-federation/module-federation-examples.git'
        run: |
          echo "${{ github.repositoryUrl }}"
          git remote add base https://github.com/${{github.repository}}
          git remote -v
          git fetch --all

          export FORKED_MASTER_SHA=$(git log -n 1 --pretty=format:"%H" origin/${{ github.event.pull_request.base.ref}})
          export BASE_MASTER_SHA=$(git log -n 1 --pretty=format:"%H" base/${{ github.event.pull_request.base.ref }})

          echo "$FORKED_MASTER_SHA"
          echo "$BASE_MASTER_SHA"
          
          if [ "$FORKED_MASTER_SHA" == "$BASE_MASTER_SHA" ];
          then
            echo "The forked master is up to date with the base master branch"
            exit 0
          else
            echo "The forked master branch is not up to date with the base master branch, Please update your fork!"
            exit 1
          fi

# Setup matrix from changed samples by lerna ls --since origin/master command
  setup-matrix:
    runs-on: ubuntu-latest
    needs: forked_master_status
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Create matrix ðŸ‘¾
        id: set-matrix
        run: |
          matrix="$(node checkChangedFiels.js)"
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

      - name: Changed files
        run: |
          echo '${{ steps.set-matrix.outputs.matrix }}'

# Run Cypress e2e tests for changed samples (additionally install deps for all changed samples if there is no any created cache in master branch) + Create artifacts for Cypress screenshots and videos
  run-e2e-test:
    needs: setup-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.setup-matrix.outputs.matrix)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Restore Yarn and Cypress cache
        uses: actions/cache/restore@v3
        id: yarn-cache
        with:
          path: |
            node_modules
            yarn.lock
            **/node_modules
            **/yarn.lock
            */*/node_modules
            */*/yarn.lock
            ~/.cache/Cypress
            ${{ steps.yarn-cache-dir-path.outputs.dir }} 
          key: e2e-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            e2e-yarn-
            e2e-

      - name: Install sample deps
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: |
          echo "YARN CACHE CHANGED"
          npx lerna bootstrap --scope=${{ matrix.container }}

      - name: Run sample e2e tests
        run: 
          npx lerna run --scope=${{ matrix.container }} --parallel e2e:ci

      - name: Create artifacts for Cypress screenshots
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: '**/${{ matrix.container }}/cypress/screenshots'

      - name: Create artifacts for Cypress videos
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-videos
          path: '**/${{ matrix.container }}/cypress/videos'
